{"version":3,"file":"js/825.842d7b16.js","mappings":";;ujDAAA,IACEA,EAKEC,OALFD,eACAE,EAIED,OAJFC,eACAC,EAGEF,OAHFE,SACAC,EAEEH,OAFFG,eACAC,EACEJ,OADFI,yBAGIC,EAAyBL,OAAzBK,OAAQC,EAAiBN,OAAjBM,KAAMC,EAAWP,OAAXO,OACpB,EAA8C,qBAAZC,SAA2BA,QAAvDC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,UAERD,IACHA,EAAQ,SAAUE,EAAKC,EAAWC,GAChC,OAAOF,EAAIF,MAAMG,EAAWC,EAD9B,GAKGR,IACHA,EAAS,SAAUS,GACjB,OAAOA,CADT,GAKGR,IACHA,EAAO,SAAUQ,GACf,OAAOA,CADT,GAKGJ,IACHA,EAAY,SAAUK,EAAMF,GACfE,OAAAA,EAAAA,EAAXC,EAAmBH,GADrB,GAKF,IAAMI,EAAeC,EAAQC,MAAMC,UAAUC,SAEvCC,EAAWJ,EAAQC,MAAMC,UAAUG,KACnCC,EAAYN,EAAQC,MAAMC,UAAUK,MAGpCC,EAAoBR,EAAQS,OAAOP,UAAUQ,aAC7CC,EAAiBX,EAAQS,OAAOP,UAAUU,UAC1CC,EAAcb,EAAQS,OAAOP,UAAUY,OACvCC,EAAgBf,EAAQS,OAAOP,UAAUc,SACzCC,EAAgBjB,EAAQS,OAAOP,UAAUgB,SACzCC,EAAanB,EAAQS,OAAOP,UAAUkB,MAEtCC,EAAarB,EAAQsB,OAAOpB,UAAUqB,MAEtCC,EAAkBC,EAAYC,WAE7B,SAAS1B,EAAQ2B,GACtB,OAAO,SAACC,GAAD,2BAAajC,EAAb,iCAAaA,EAAb,KAAAkC,UAAAA,GAAA,OAAsBtC,EAAMoC,EAAMC,EAASjC,EAAlD,CACD,CAEM,SAAS8B,EAAYE,GACnB,6CAAIhC,EAAJ,yBAAIA,EAAJ,GAAAkC,UAAAA,GAAA,OAAarC,EAAUmC,EAAMhC,EAApC,CACD,CAGM,SAASmC,EAASC,EAAKC,EAAOC,GACnCA,EAAoBA,GAAwCzB,EACxDzB,GAIFA,EAAegD,EAAK,MAGtB,IAAIG,EAAIF,EAAMG,OACPD,MAAAA,IAAK,CACV,IAAIE,EAAUJ,EAAME,GACpB,GAAuB,kBAAZE,EAAsB,CAC/B,IAAMC,EAAYJ,EAAkBG,GAChCC,IAAcD,IAEXpD,EAASgD,KACZA,EAAME,GAAKG,GAGbD,EAAUC,EAEb,CAEDN,EAAIK,IAAW,CAChB,CAED,OAAOL,CACR,CAGM,SAASO,EAAMC,GACpB,IAEIC,EAFEC,EAAYpD,EAAO,MAGpBmD,IAAAA,KAAYD,EACXhD,EAAMV,EAAgB0D,EAAQ,CAACC,MACjCC,EAAUD,GAAYD,EAAOC,IAIjC,OAAOC,CACR,CAMD,SAASC,EAAaH,EAAQI,GACrBJ,MAAW,OAAXA,EAAiB,CACtB,IAAMK,EAAO1D,EAAyBqD,EAAQI,GAC9C,GAAIC,EAAM,CACJA,GAAAA,EAAKC,IACP,OAAO7C,EAAQ4C,EAAKC,KAGtB,GAA0B,oBAAfD,EAAKE,MACd,OAAO9C,EAAQ4C,EAAKE,MAEvB,CAEDP,EAAStD,EAAesD,EACzB,CAEQQ,SAAAA,EAAcX,GAErB,OADAY,QAAQC,KAAK,qBAAsBb,GAC5B,IACR,CAED,OAAOW,CACR,CCjIM,IAAMG,EAAO/D,EAAO,CACzB,IACA,OACA,UACA,UACA,OACA,UACA,QACA,QACA,IACA,MACA,MACA,MACA,QACA,aACA,OACA,KACA,SACA,SACA,UACA,SACA,OACA,OACA,MACA,WACA,UACA,OACA,WACA,KACA,YACA,MACA,UACA,MACA,SACA,MACA,MACA,KACA,KACA,UACA,KACA,WACA,aACA,SACA,OACA,SACA,OACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,SACA,KACA,OACA,IACA,MACA,QACA,MACA,MACA,QACA,SACA,KACA,OACA,MACA,OACA,UACA,OACA,WACA,QACA,MACA,OACA,KACA,WACA,SACA,SACA,IACA,UACA,MACA,WACA,IACA,KACA,KACA,OACA,IACA,OACA,UACA,SACA,SACA,QACA,SACA,SACA,OACA,SACA,SACA,QACA,MACA,UACA,MACA,QACA,QACA,KACA,WACA,WACA,QACA,KACA,QACA,OACA,KACA,QACA,KACA,IACA,KACA,MACA,QACA,QAIWgE,EAAMhE,EAAO,CACxB,MACA,IACA,WACA,cACA,eACA,eACA,gBACA,mBACA,SACA,WACA,OACA,OACA,UACA,SACA,OACA,IACA,QACA,WACA,QACA,QACA,OACA,iBACA,SACA,OACA,WACA,QACA,OACA,UACA,UACA,WACA,iBACA,OACA,OACA,QACA,SACA,SACA,OACA,WACA,QACA,OACA,QACA,OACA,UAGWiE,EAAajE,EAAO,CAC/B,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,iBAOWkE,EAAgBlE,EAAO,CAClC,UACA,gBACA,SACA,UACA,eACA,YACA,mBACA,iBACA,gBACA,gBACA,gBACA,QACA,YACA,OACA,eACA,YACA,UACA,gBACA,SACA,MACA,aACA,UACA,QAGWmE,EAASnE,EAAO,CAC3B,OACA,WACA,SACA,UACA,QACA,SACA,KACA,aACA,gBACA,KACA,KACA,QACA,UACA,WACA,QACA,OACA,KACA,SACA,QACA,SACA,OACA,OACA,UACA,SACA,MACA,QACA,MACA,SACA,eAKWoE,EAAmBpE,EAAO,CACrC,UACA,cACA,aACA,WACA,YACA,UACA,UACA,SACA,SACA,QACA,YACA,aACA,iBACA,cACA,SAGWqE,EAAOrE,EAAO,CAAC,UCpRf+D,EAAO/D,EAAO,CACzB,SACA,SACA,QACA,MACA,iBACA,eACA,uBACA,WACA,aACA,UACA,SACA,UACA,cACA,cACA,UACA,OACA,QACA,QACA,QACA,OACA,UACA,WACA,eACA,SACA,cACA,WACA,WACA,UACA,MACA,WACA,0BACA,wBACA,WACA,YACA,UACA,eACA,OACA,MACA,UACA,SACA,SACA,OACA,OACA,WACA,KACA,YACA,YACA,QACA,OACA,QACA,OACA,OACA,UACA,OACA,MACA,MACA,YACA,QACA,SACA,MACA,YACA,WACA,QACA,OACA,QACA,UACA,aACA,SACA,OACA,UACA,UACA,cACA,cACA,SACA,UACA,UACA,aACA,WACA,MACA,WACA,MACA,WACA,OACA,OACA,UACA,aACA,QACA,WACA,QACA,OACA,QACA,OACA,UACA,QACA,MACA,SACA,OACA,QACA,UACA,WACA,QACA,YACA,OACA,SACA,SACA,QACA,QACA,QACA,SAGWgE,EAAMhE,EAAO,CACxB,gBACA,aACA,WACA,qBACA,SACA,gBACA,gBACA,UACA,gBACA,iBACA,QACA,OACA,KACA,QACA,OACA,gBACA,YACA,YACA,QACA,sBACA,8BACA,gBACA,kBACA,KACA,KACA,IACA,KACA,KACA,kBACA,YACA,UACA,UACA,MACA,WACA,YACA,MACA,OACA,eACA,YACA,SACA,cACA,cACA,gBACA,cACA,YACA,mBACA,eACA,aACA,eACA,cACA,KACA,KACA,KACA,KACA,aACA,WACA,gBACA,oBACA,SACA,OACA,KACA,kBACA,KACA,MACA,IACA,KACA,KACA,KACA,KACA,UACA,YACA,aACA,WACA,OACA,eACA,iBACA,eACA,mBACA,iBACA,QACA,aACA,aACA,eACA,eACA,cACA,cACA,mBACA,YACA,MACA,OACA,QACA,SACA,OACA,MACA,OACA,aACA,SACA,WACA,UACA,QACA,SACA,cACA,SACA,WACA,cACA,OACA,aACA,sBACA,mBACA,eACA,SACA,gBACA,sBACA,iBACA,IACA,KACA,KACA,SACA,OACA,OACA,cACA,YACA,UACA,SACA,SACA,QACA,OACA,kBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,aACA,eACA,mBACA,oBACA,iBACA,kBACA,oBACA,iBACA,SACA,eACA,QACA,eACA,iBACA,WACA,UACA,UACA,YACA,mBACA,cACA,kBACA,iBACA,aACA,OACA,KACA,KACA,UACA,SACA,UACA,aACA,UACA,aACA,gBACA,gBACA,QACA,eACA,OACA,eACA,mBACA,mBACA,IACA,KACA,KACA,QACA,IACA,KACA,KACA,IACA,eAGWmE,EAASnE,EAAO,CAC3B,SACA,cACA,QACA,WACA,QACA,eACA,cACA,aACA,aACA,QACA,MACA,UACA,eACA,WAC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","sources":["webpack://blog-front/../src/utils.js","webpack://blog-front/../src/tags.js","webpack://blog-front/../src/attrs.js","webpack://blog-front/../src/regexp.js","webpack://blog-front/../src/purify.js","webpack://blog-front/./src/views/ArticleView.vue","webpack://blog-front/./src/components/FullArticle.vue","webpack://blog-front/./node_modules/marked/lib/marked.esm.js","webpack://blog-front/./src/components/FullArticle.vue?7b09","webpack://blog-front/./src/views/ArticleView.vue?ad1b"],"sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringToString,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet(\n    {},\n    [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE],\n    stringToString\n  );\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? stringToString\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES =\n      'ALLOWED_NAMESPACES' in cfg\n        ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString)\n        : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // For XHTML and XML documents that support custom namespaces\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      ALLOWED_NAMESPACES[element.namespaceURI]\n    ) {\n      return true;\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml' &&\n      NAMESPACE === HTML_NAMESPACE\n    ) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function' ||\n        typeof elm.hasChildNodes !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      content = stringReplace(content, TMPLIT_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n        value = stringReplace(value, TMPLIT_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n","<template>\r\n  <div class=\"archive\">\r\n    <FullArticle :article=\"article\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport FullArticle from '@/components/FullArticle.vue';\r\n\r\nexport default {\r\n  name: 'HomeView',\r\n  components: {\r\n    FullArticle,\r\n  },\r\n  data: () => {\r\n    return {\r\n      article: {},\r\n    };\r\n  },\r\n  watch: {\r\n    async $route() {\r\n      await this.getArticle();\r\n      window.scrollTo(0, 0);\r\n    },\r\n  },\r\n  mounted() {\r\n    this.getArticle();\r\n  },\r\n  methods: {\r\n    async getArticle(take, page) {\r\n      await this.$root.myApi\r\n        .get(this.$store.state.publicPath + '/api/posts/', {\r\n          params: {\r\n            id: this.$route.params.postId,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          const { title, text, preview_name, comments, publication_date } = res.data;\r\n\r\n          this.article = res.data;\r\n        })\r\n        .catch((error) => {\r\n          eventBus.emit('noresponse', error);\r\n        });\r\n    },\r\n  }\r\n};\r\n</script>\r\n","<template>\r\n  <div class=\"article\">\r\n    <div class=\"row\">\r\n      <div class=\"col col-md-7\">\r\n        <div class=\"card-body text-left\">\r\n          <p class=\"card-text mt-4\">\r\n            <span class=\"card-text small\">\r\n              {{ dateFormatter(article.publication_date) }}\r\n              <span class=\"far fa-calendar-alt mr-2\"></span>\r\n            </span>\r\n          </p>\r\n          <h1 class=\"h1 card-title mb-3\">{{ article.title }}</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span v-if=\"parsedText\" v-html=\"parsedText\" class=\"article-text mt-4\" v-highlight></span>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport eventBus from '../eventBus';\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\nimport { marked } from 'marked';\r\nimport * as DOMPurify from 'dompurify';\r\n\r\nexport default {\r\n  props: ['postId'],\r\n  props: ['article'],\r\n  data: () => {\r\n    return {\r\n      parsedText: '',\r\n    }\r\n  },\r\n  watch: {\r\n    'article.text': function (newVal, oldVal) {\r\n      this.parsedText = DOMPurify.sanitize(marked.parse(this.article.text))?.replaceAll(\r\n        '<pre>',\r\n        \"<pre class='language-csharp'>\"\r\n      );\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$route.name === \"about\")\r\n      this.parsedText = DOMPurify.sanitize(marked.parse(this.article.text ?? \" \"));\r\n  },\r\n  updated() {\r\n    if (this.$route.name === \"about\")\r\n      this.parsedText = DOMPurify.sanitize(marked.parse(this.article.text ?? \" \"));\r\n  },\r\n  methods: {\r\n    dateFormatter,\r\n  },\r\n}\r\n</script>\r\n  ","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = merge({}, pack);\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import { render } from \"./FullArticle.vue?vue&type=template&id=2b34048e\"\nimport script from \"./FullArticle.vue?vue&type=script&lang=js\"\nexport * from \"./FullArticle.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\simple-blog\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ArticleView.vue?vue&type=template&id=846a69f2\"\nimport script from \"./ArticleView.vue?vue&type=script&lang=js\"\nexport * from \"./ArticleView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\simple-blog\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["hasOwnProperty","Object","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","Reflect","apply","construct","fun","thisValue","args","x","Func","_toConsumableArray","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","arguments","addToSet","set","array","transformCaseFunc","l","length","element","lcElement","clone","object","property","newObject","lookupGetter","prop","desc","get","value","fallbackValue","console","warn","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","DOMPurify","root","version","VERSION","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","hooks","createHTMLDocument","PARSER_MEDIA_TYPE","EXPRESSIONS","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","_typeof","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","outerHTML","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","undefined","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","shadowroot","serializedHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","class","_createElementBlock","_createVNode","_component_FullArticle","article","_ctx","_createElementVNode","$options","$props","publication_date","_hoisted_7","_toDisplayString","title","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","encode","unescapeTest","unescape","n","charAt","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","target","key","splitCells","tableRow","count","row","offset","str","escaped","curr","cells","split","shift","splice","c","invert","suffLen","currChar","slice","findClosingBracket","b","level","checkSanitizeDeprecation","repeatString","pattern","result","outputLink","cap","link","raw","lexer","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","matchIndentInNode","indentInNode","join","Tokenizer","constructor","options","this","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","Error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","id","slug","startatt","listitem","checkbox","tablerow","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parser","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","marked","callback","done","err","pending","setTimeout","onError","message","Promise","all","then","catch","setOptions","use","childTokens","pack","opts","ext","prevRenderer","prevTokenizer","values","concat","lexInline","props","parsedText","watch","newVal","oldVal","replaceAll","mounted","$route","updated","methods","dateFormatter","__exports__","components","FullArticle","getArticle","scrollTo","take","page","$root","myApi","$store","publicPath","params","postId","res","preview_name","comments","eventBus","emit","render"],"sourceRoot":""}