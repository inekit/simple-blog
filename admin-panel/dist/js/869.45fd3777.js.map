{"version":3,"file":"js/869.45fd3777.js","mappings":"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","sources":["webpack://@coreui/coreui-free-vue-admin-template/./src/utils/dateFormatter.js","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Posts.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddPostModal.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/AddPostModal.vue?887d","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue","webpack://@coreui/coreui-free-vue-admin-template/./src/components/Table.vue?7a8d","webpack://@coreui/coreui-free-vue-admin-template/./src/views/Posts.vue?709c"],"sourcesContent":["let options = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n};\r\n\r\nmodule.exports = {\r\n  dateFormatter: (date) => {\r\n    return new Date(date).toLocaleDateString('ru-RU', options);\r\n  },\r\n  getAgeStr(months) {\r\n    return months > 12 ? `${Math.trunc(months / 12)} лет ${months % 12} месяцев` : `${months} месяцев`;\r\n  },\r\n};\r\n","<template>\r\n  <div>\r\n    <AddPostModal :visible=\"formVisible\" :formData=\"formData\" :mode=\"formMode\" />\r\n    <Table :fields=\"tableFieldNames\" :postData=\"get\" :actions=\"dataActions\" :rows=\"rows\" editMode=\"form\" name=\"Посты\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddPostModal from '@/components/AddPostModal.vue'\r\nimport Table from '@/components/Table.vue'\r\nimport eventBus from '../eventBus'\r\n\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n  credentials: 'include'\r\n\r\n})\r\n\r\nexport default {\r\n  name: 'Posts',\r\n  components: {\r\n    AddPostModal,\r\n    Table,\r\n  },\r\n  props: ['tag', 'project'],\r\n  data() {\r\n    return {\r\n      myApi: myApi,\r\n      formVisible: false,\r\n      formData: {},\r\n      rows: [],\r\n      dataActions: {\r\n        Изменить: { action: this.change, color: 'warning' },\r\n        Удалить: { action: this.delete, color: 'danger' },\r\n      },\r\n      tableFieldNames: [\r\n        {\r\n          name: 'title',\r\n          title: 'Название',\r\n        },\r\n        {\r\n          name: 'publication_date',\r\n          title: 'Дата добавления',\r\n        },\r\n      ],\r\n    }\r\n  },\r\n  created() {\r\n    eventBus.$on('addNewPost', () => {\r\n      this.formMode = 'new'\r\n      this.formData = {\r\n        project_name: this.$route.params.projectName,\r\n        tags_array: this.$route.params.tag\r\n          ? new Set([this.$route.params.tag])\r\n          : new Set(),\r\n      }\r\n      this.formVisible = true\r\n    })\r\n    eventBus.$on('closeModal', () => {\r\n      this.formVisible = false\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postAdded', () => {\r\n      this.formVisible = false\r\n      //this.rows.unshift(this.formData)\r\n      this.get()\r\n      this.formData = {}\r\n    })\r\n    eventBus.$on('postEdited', () => {\r\n      this.formVisible = false\r\n      this.formData = {}\r\n    })\r\n  },\r\n  methods: {\r\n    change(elObj) {\r\n      this.formVisible = true\r\n      elObj.tags_array = new Set(elObj.tags_array)\r\n      this.formData = elObj\r\n      console.log(elObj)\r\n      this.formMode = 'edit'\r\n    },\r\n    get(take, page) {\r\n      console.log(this.tag)\r\n      return myApi\r\n        .get(this.$store.state.publicPath + '/api/admin/posts/', {\r\n          params: {\r\n            take: take ?? 10,\r\n            page: page ?? 1,\r\n            tagsArray: this.$route.params.tag\r\n              ? [this.$route.params.tag]\r\n              : undefined,\r\n            projectName: this.$route.params.projectName,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res.data?.length > 0) this.rows = res.data\r\n          return res.data\r\n        })\r\n        .catch((error) => {\r\n          eventBus.$emit('noresponse', error)\r\n          return false\r\n        })\r\n    },\r\n    delete(item) {\r\n      const result = confirm('Вы действительно хотите удалить пост?')\r\n      if (result)\r\n        return myApi\r\n          .delete(this.$store.state.publicPath + '/api/admin/posts/', {\r\n            data: { id: item.id },\r\n          })\r\n          .then(() => {\r\n            this.get()\r\n            eventBus.$emit('postDeleted')\r\n          })\r\n          .catch((error) => {\r\n            eventBus.$emit('noresponse', error)\r\n          })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nbutton {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","<template>\r\n  <CButton color=\"primary\" @click=\"addNewPost\">Добавить пост</CButton>\r\n  <CModal size=\"xl\" backdrop=\"static\" alignment=\"center\" :visible=\"visible\" @close=\"closeModal\">\r\n    <CForm novalidate :validated=\"formValid\" ref=\"add-file-form\" @change=\"wregert\"\r\n      @submit.prevent=\"mode === 'new' ? addNewing() : editNewing()\" class=\"add-user\" style=\"display: 'none'\">\r\n      <CModalHeader>\r\n        <CModalTitle>{{\r\n          mode === 'new' ? 'Добавить пост' : 'Редактировать пост'\r\n        }}</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <CFormInput class=\"mb-3\" v-model=\"formData.title\" placeholder=\"Заголовок\" id=\"inputHeader\"\r\n          aria-describedby=\"inputGroupPrepend\" feedbackValid=\"Все ок\" maxlength=\"255\"\r\n          feedbackInvalid=\"Введите корректный заголовок\" required />\r\n\r\n        <CFormTextarea :style=\"{ display: textEditMode === 'md2' ? 'block' : 'none' }\" v-model=\"textMd2\"\r\n          label=\"Текст статьи\" style=\"margin-bottom: 1rem\" placeholder=\"Напишите что-нибудь\" rows=\"20\" id=\"inputText\"\r\n          aria-describedby=\"inputGroupPrepend\" required />\r\n\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" @click=\"closeModal\"> Отменить </CButton>\r\n        <CButton v-show=\"mode === 'new'\" color=\"primary\" type=\"submit\">Добавить пост</CButton>\r\n        <CButton v-show=\"mode === 'edit'\" color=\"primary\" type=\"submit\">Редактировать пост</CButton>\r\n      </CModalFooter>\r\n    </CForm>\r\n  </CModal>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nconst myApi = axios.create({\r\n  withCredentials: true,\r\n})\r\nimport eventBus from '../eventBus'\r\n\r\nexport default {\r\n  components: {},\r\n  props: {\r\n    mode: {\r\n      required: true,\r\n      type: String,\r\n      validator: (value) => ['new', 'edit'].includes(value.toLowerCase()),\r\n    },\r\n    visible: false,\r\n    formData: {\r\n      title: '',\r\n      text: '',\r\n      description: '',\r\n      preview_name: '',\r\n      tags_array: new Set(),\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      textMd2: '',\r\n      textEditMode: 'md2',\r\n      formValid: false,\r\n      preview: \"\"\r\n    }\r\n  },\r\n  updated() {\r\n    this.textMd2 = this.formData.text\r\n\r\n    document.getElementsByClassName('ql-toolbar')?.[0].classList.add('hidden')\r\n  },\r\n  async mounted() {\r\n  },\r\n  methods: {\r\n    addNewPost() {\r\n      eventBus.$emit('addNewPost')\r\n    },\r\n    changeP(e) {\r\n      console.log(e.target.value)\r\n      this.formData.project_name = e.target.value\r\n    },\r\n    changeT(e) {\r\n      console.log(e.target.checked)\r\n      if (e.target.checked) this.formData.tags_array.add(e.target.value)\r\n      else this.formData.tags_array.delete(e.target.value)\r\n    },\r\n    closeModal() {\r\n      eventBus.$emit('closeModal')\r\n    },\r\n    constractFromData(isEdit) {\r\n      if (!this.formData.title || !this.textMd2)\r\n        throw new Error()\r\n\r\n      var formData = new FormData()\r\n      formData.append('title', this.formData.title)\r\n      formData.append('text', this.textMd2)\r\n\r\n      isEdit && formData.append('id', this.formData.id)\r\n\r\n      return formData\r\n    },\r\n    addNewing() {\r\n      console.log(this.$refs.postTextEditor.getHTML())\r\n      try {\r\n        const formData = this.constractFromData()\r\n\r\n        myApi\r\n          .post(this.$store.state.publicPath + '/api/admin/posts', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postAdded')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n    editNewing() {\r\n      try {\r\n        const formData = this.constractFromData(true)\r\n\r\n        myApi\r\n          .put(this.$store.state.publicPath + '/api/admin/posts', formData, {\r\n            headers: {\r\n              'Content-Type': 'multipart/form-data',\r\n            },\r\n          })\r\n          .then(() => {\r\n            eventBus.$emit('postEdited')\r\n          })\r\n          .catch((e) => {\r\n            eventBus.$emit('noresponse', e)\r\n          })\r\n      } catch (e) {\r\n        this.formValid = true\r\n        //eventBus.$emit('wrongInputData', e)\r\n      }\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep .hidden {\r\n  display: none;\r\n}\r\n\r\n.tags-cloud,\r\n.projects-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  &>* {\r\n    margin-right: 20px;\r\n  }\r\n\r\n  &>span {\r\n    flex: 0 0 100%;\r\n    margin-bottom: 10px;\r\n  }\r\n}\r\n\r\n.preview-container {\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n\r\n  &>div {\r\n    max-width: 24%;\r\n    position: relative;\r\n\r\n    button {\r\n      position: absolute;\r\n      top: 5px;\r\n      right: 5px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import { render } from \"./AddPostModal.vue?vue&type=template&id=34bdc2b3&scoped=true\"\nimport script from \"./AddPostModal.vue?vue&type=script&lang=js\"\nexport * from \"./AddPostModal.vue?vue&type=script&lang=js\"\n\nimport \"./AddPostModal.vue?vue&type=style&index=0&id=34bdc2b3&lang=scss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\simple-blog\\\\admin-panel\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-34bdc2b3\"]])\n\nexport default __exports__","<template>\r\n  <CRow>\r\n    <CCol :md=\"12\">\r\n      <CCard class=\"mb-4\">\r\n        <CCardHeader> {{ name }} </CCardHeader>\r\n        <CCardBody>\r\n          <CTable align=\"middle\" class=\"mb-0 border\" hover responsive>\r\n            <CTableHead color=\"light\">\r\n              <CTableRow>\r\n                <CTableHeaderCell v-for=\"fn in fieldNames\" :key=\"fn + 'header'\" class=\"text-center\">{{ fn }}\r\n                </CTableHeaderCell>\r\n                <CTableHeaderCell class=\"text-center\">Действия</CTableHeaderCell>\r\n              </CTableRow>\r\n            </CTableHead>\r\n            <CTableBody>\r\n              <CTableRow v-for=\"(row, i) in transformData(rows)\" :key=\"i + 'row'\">\r\n                <CTableDataCell v-for=\"(column, j) in row\" :key=\"j + 'row'\" class=\"text-center\">\r\n                  <CFormInput v-if=\"updatingId === rows[i]?.id\" v-model=\"formData[fields[j]?.name]\" />\r\n                  <span v-else>{{ column }}</span>\r\n                </CTableDataCell>\r\n                <CTableDataCell>\r\n                  <div class=\"d-grid gap-2 d-md-flex justify-content-md-center\">\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'primary'\" size=\"md\" @click=\"editRow(i)\">\r\n                      Сохранить</CButton>\r\n                    <CButton v-if=\"updatingId === rows[i]?.id\" :color=\"'light'\" size=\"md\" @click=\"updatingId = false\">\r\n                      Отменить</CButton>\r\n                    <CButton v-else v-for=\"(info, name) in actions\" :key=\"name + 'action'\" :color=\"info?.color\"\r\n                      size=\"sm\" @click=\"chooseAction(name, info, i, j, column)\">{{ name }}</CButton>\r\n                  </div>\r\n                </CTableDataCell>\r\n              </CTableRow>\r\n              <CTableRow> </CTableRow>\r\n            </CTableBody>\r\n          </CTable>\r\n        </CCardBody>\r\n      </CCard>\r\n    </CCol>\r\n  </CRow>\r\n  <CPagination aria-label=\"Page navigation example\">\r\n    <CPaginationItem @click=\"previousPage\">Назад</CPaginationItem>\r\n    <CPaginationItem disabled>{{ page }}</CPaginationItem>\r\n    <CPaginationItem @click=\"nextPage\">Далее</CPaginationItem>\r\n  </CPagination>\r\n</template>\r\n\r\n<script>\r\nimport { dateFormatter } from '../utils/dateFormatter';\r\n\r\nexport default {\r\n  props: {\r\n    name: {\r\n      type: String,\r\n    },\r\n    fields: [],\r\n    actions: [],\r\n    rows: [],\r\n    postData: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    updateRow: {\r\n      type: Function,\r\n      default: () => { },\r\n    },\r\n    editMode: {\r\n      type: String,\r\n      default: 'inline',\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      fieldNames: [],\r\n      perPage: 10,\r\n      page: 1,\r\n      updatingId: false,\r\n      formData: {},\r\n    }\r\n  },\r\n  async mounted() {\r\n    this.fieldNames = this.fields.map((el) => {\r\n      if (typeof el === 'object') return el.title ?? el.name\r\n      else return el\r\n    })\r\n\r\n    await this.postData(this.perPage, this.page)\r\n  },\r\n  methods: {\r\n    dateFormatter,\r\n    chooseAction(name, info, rowId) {\r\n      if (!info) return\r\n      console.log(name === 'Изменить' && this.editMode === 'inline', rowId)\r\n      if (name === 'Изменить' && this.editMode === 'inline') {\r\n        this.updatingId = this.rows[rowId]?.id\r\n        this.formData = this.rows[rowId]\r\n      } else info?.action(this.rows[rowId])\r\n    },\r\n    async nextPage() {\r\n      const data = await this.postData(this.perPage, this.page + 1)\r\n      if (data?.length > 0) this.page++\r\n    },\r\n    previousPage() {\r\n      if (this.page > 1) this.page--\r\n      this.postData(this.perPage, this.page)\r\n    },\r\n    toPage(n) {\r\n      this.page = n\r\n      this.postData(this.perPage, this.page)\r\n    },\r\n    editRow(i) {\r\n      this.updatingId = false\r\n      this.updateRow(this.rows[i]?.id, this.formData)\r\n    },\r\n    transformData(data) {\r\n      return data?.map(this.transformDataEl)\r\n    },\r\n    transformDataEl(pair) {\r\n      let pairFormed = []\r\n      for (let f of this.fields) {\r\n        const children = f.name.split('.') ?? f.split('.')\r\n        let e = pair\r\n        children?.forEach((c) => (e = e?.[c]))\r\n\r\n        if (f?.name === 'publication_date') e = dateFormatter(e)\r\n\r\n        if (f?.name === 'text') e = e.substr(0, 100)\r\n\r\n        pairFormed.push(e ?? '')\r\n      }\r\n      return pairFormed\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.btn-md {\r\n  margin: 0;\r\n}\r\n</style>\r\n","import { render } from \"./Table.vue?vue&type=template&id=079c740b\"\nimport script from \"./Table.vue?vue&type=script&lang=js\"\nexport * from \"./Table.vue?vue&type=script&lang=js\"\n\nimport \"./Table.vue?vue&type=style&index=0&id=079c740b&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\simple-blog\\\\admin-panel\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Posts.vue?vue&type=template&id=7a0a3890\"\nimport script from \"./Posts.vue?vue&type=script&lang=js\"\nexport * from \"./Posts.vue?vue&type=script&lang=js\"\n\nimport \"./Posts.vue?vue&type=style&index=0&id=7a0a3890&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Ник\\\\Documents\\\\GitHub\\\\simple-blog\\\\admin-panel\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["options","year","month","day","module","exports","dateFormatter","date","Date","toLocaleDateString","getAgeStr","months","Math","trunc","_createElementBlock","_createVNode","_component_AddPostModal","visible","$data","formData","mode","_ctx","_component_Table","fields","postData","$options","actions","rows","editMode","name","_component_CButton","color","onClick","_component_CModal","size","backdrop","alignment","$props","onClose","_component_CForm","novalidate","validated","ref","onChange","onSubmit","class","style","_component_CModalHeader","_component_CModalTitle","_component_CModalBody","_component_CFormInput","title","placeholder","id","feedbackValid","maxlength","feedbackInvalid","required","_component_CFormTextarea","display","label","_component_CModalFooter","type","myApi","axios","withCredentials","components","props","String","validator","value","includes","toLowerCase","text","description","preview_name","tags_array","Set","data","textMd2","textEditMode","formValid","preview","updated","this","document","getElementsByClassName","classList","add","async","methods","addNewPost","eventBus","changeP","e","console","log","target","project_name","changeT","checked","delete","closeModal","constractFromData","isEdit","Error","FormData","append","addNewing","$refs","postTextEditor","getHTML","post","$store","state","publicPath","headers","then","catch","editNewing","put","__exports__","_component_CRow","_component_CCol","md","_component_CCard","_component_CCardHeader","_component_CCardBody","_component_CTable","align","hover","responsive","_component_CTableHead","_component_CTableRow","_Fragment","fn","_createBlock","_component_CTableHeaderCell","key","_component_CTableBody","row","i","column","j","_component_CTableDataCell","_createElementVNode","_hoisted_2","info","_component_CPagination","_component_CPaginationItem","disabled","Function","default","updateRow","fieldNames","perPage","page","updatingId","map","el","chooseAction","rowId","action","length","previousPage","toPage","n","editRow","transformData","transformDataEl","pair","pairFormed","f","children","split","forEach","c","substr","push","credentials","AddPostModal","Table","formVisible","dataActions","Изменить","change","Удалить","tableFieldNames","created","formMode","$route","params","projectName","tag","get","elObj","take","tagsArray","undefined","res","error","item","result","confirm","render"],"sourceRoot":""}